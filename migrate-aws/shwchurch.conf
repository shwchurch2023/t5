server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host:443$request_uri;
}

server {

	# nginx doesn't support variable in pattern match
	if ( $host != t5.shwchurch.org ) {
        	#return 301 https://t5.shwchurch.org:443$request_uri;
	}
	
	#subs_filter_types text/css text/xml;
        #subs_filter ://*\.shwchurch\.org ://t5.shwchurch.org irg;

        server_name tmp202408.shwchurch.org t5.shwchurch.org shwchurch.org *.shwchurch.org;
        #server_name t5.shwchurch.org shwchurch.org *.shwchurch.org;

        ssl_certificate /etc/letsencrypt/live/tmp202408.shwchurch.org/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/tmp202408.shwchurch.org/privkey.pem;

	access_log /mnt/data/shwchurch/log/nginx/access.log;
	error_log  /mnt/data/shwchurch/log/nginx/error.log  warn;

	listen [::]:443 ssl ipv6only=on; # managed by Certbot
    	listen 443 ssl; # managed by Certbot

	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
	
	root /mnt/data/shwchurch/web/;

	index index.php index.html index.htm;

	client_max_body_size 50M;

       # Add index.php to the list if you are using PHP
        location / {
   		proxy_read_timeout 300;
   		proxy_connect_timeout 300;
   		proxy_send_timeout 300; 
                # This is cool because no php is touched for static content.
                # include the "?$args" part so non-default permalinks doesn't break when using query string

                try_files $uri $uri/ /index.php?$args;
        }


        location = /sw-ejournal {
                return 301 /#/hashEventClick/selector/ID_main_ejournal;
        }

        # enable download folder
        location /wp-content/uploads/ftp/ {
                include       mime.types;
                default_type  application/octet-stream;
                sendfile        on;
                keepalive_timeout  65;
                autoindex on;
		charset utf-8;
        }

	# force pdf / mp3, etc download in /wp-content/uploads/ftp/
	location ~* (/wp-content/uploads/ftp/.*\.pdf) {
	    types { application/octet-stream .pdf; }
	    default_type application/octet-stream;
	}
	location ~* (/wp-content/uploads/ftp/.*\.mp3) {
	    types { application/octet-stream .mp3; }
	    default_type application/octet-stream;
	}

    include /mnt/data/nginx_conf/restrictions.conf;
    include /mnt/data/nginx_conf/wordpress.conf;

    location ~ \.php$ {
      	fastcgi_pass    unix:/var/run/php-fpm/www.sock;
		# defined in /etc/nginx/conf.d/php-fpm.conf, as upstream
		# if not started, check error in tail -f /var/log/php-fpm/7.3/*
		# /mnt/data/shwchurch/web/wp-content/plugins/w3-total-cache may have issues
		# consider yum install php73-cli php73-common php73-gd php73-imap php73-jsonc php73-mbstring php73-mysqlnd php73-odbc php73-pdo php73-pecl-apcu php73-process php73-soap php73-xml 
      		## fastcgi_pass    php-fpm;
		#NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                #include fastcgi.conf;
		# nginx 1.13
		include fastcgi_params;
        	#fastcgi_param   SCRIPT_FILENAME  /mnt/data/shwchurch/web/$fastcgi_script_name;
        fastcgi_param   SCRIPT_FILENAME  $document_root/$fastcgi_script_name;
        fastcgi_intercept_errors on;
        fastcgi_param PHP_VALUE "upload_max_filesize=5M;\n error_reporting=E_ALL;\n memory_limit=1024M;\n max_execution_time=120;\n post_max_size = 50M;\n upload_max_filesize = 50M;";
                #fastcgi_pass php;
        }

	location ~ /\.ht {
                deny all;
        }
    

	#include /mnt/data/nginx_conf/shared.shwchurch.conf;

}

#include /mnt/data/nginx_conf/www.shwchurch.cloudns.asia;
#include /mnt/data/cloudns/generated_latest_cloudns_nginx.conf;